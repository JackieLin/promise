// Generated by CoffeeScript 1.10.0

/*
 * promise 信息
 * @author jackie Lin <dashi_lin@163.com>
 * @date 2016-3-9
 */
(function(window) {
  var Promise, bind, init;
  Promise = function(cb) {
    if (cb == null) {
      cb = function() {};
    }
    init();
    this._cb = cb;

    /*
     * 0 - pending
     * 1 - fulfilled with _value
     * 2 - rejected with _value
     * 3 - adopted the state of another promise, _value
     */
    this._status = 0;
    this._value = null;
    this._deferred = [];
    return this._cb.apply(null, [this.resolve.bind(this), this.reject.bind(this)]);
  };

  /*
   * 绑定方法到对应的上下文
   */
  bind = function(context) {
    var aArgs, fToBind, warpperFunc;
    if (context == null) {
      context = this;
    }
    if (this !== 'function') {
      throw new TypeError('绑定对象应该是一个方法');
    }
    aArgs = Array.prototype.slice.call(arguments, 1);
    fToBind = this;
    warpperFunc = function() {
      return fToBind.apply(context, aArgs.concat(Array.prototype.slice.call(arguments)));
    };
    return warpperFunc;
  };
  init = function() {
    this._status = 0;
    this._value = null;
    if (!Function.prototype.bind) {
      return Function.prototype.bind = bind;
    }
  };
  Promise.prototype.resolve = function(res) {
    this._status = 1;
    this._value = res;
    return this;
  };
  Promise.prototype.reject = function() {
    this._status = 2;
    this._value = res;
    return this;
  };
  Promise.prototype.then = function(cb) {
    var _value;
    if (this._status !== 3) {
      _value = cb.apply(null, [this._value]);
    }
    if (this._status === 3) {
      this._deferred.push(cb);
    }
    if (_value instanceof Promise) {
      this._status = 3;
    }
    return this;
  };
  if (!window.define) {
    return window.Promise = Promise;
  }
  if (window.define) {
    return window.define(function() {
      return Promise;
    });
  }
})(window);
